# Tema GTK2 Huayra Limbo: Un tema OSX-friendly para aquellos migrando a software libre.

# Please keep this gtkrc in sync with the other ones from Clearlooks based themes.

gtk-color-scheme = "base_color:#f9f9f9\nfg_color:#202020\ntooltip_fg_color:#ffffff\nselected_bg_color:#69aef5\nselected_fg_color:#ffffff\ntext_color:#202030\nbg_color:#d0d0d0\ntooltip_bg_color:#69aef5"

#base_color: (original babdb6) cajas de entrada, fondos de carpetas, "blanco" de editores, etc.
#fg_color: (original f5f5f5) texto de ventanas (menues)
#tooltip_fg_color: (original 000000) color de texto de tooltips
#selected_bg_color: (original f57900) color de fondo elementos seleccionados (tabs, menues, etc).
#selected_fg_color: (original ffffff) color del texto de elementos seleccionados.
#text_color: (original 000000) color de texto cajas de entrada.
#bg_color: (original 888a85) color de fondo de ventanas.
#tooltip_bg_color: (original f5f5b5) color de fondo de tooltips
#link_color: (original 0000ee) color de links (ejemplo: "obtener mas fondos en linea")
#visited_link_color: (original 551a8b) enlaces visitados.


gtk-auto-mnemonics = 1
#########

#gtk-icon-sizes    = "gtk-large-toolbar=18,18 : gtk-small-toolbar=12,12 : panel-menu=16,16 : panel-applet=16,16 : gtk-button=16,16 : gtk-dialog=64,64" # This enables "compact-mode".
gtk-button-images    = 0 # Enables or disables icons on buttons (OS X-like).
#gtk-menu-popup-delay    = 1 # Makes menus pop up faster! Set to 1 instead of 0 to avoid Banshee 1 bug.

##########

##########
# PANELS 
##########
include "panel.rc" # This includes the file that handles panel theming. Gradient panel backgrounds are enabled by default for this setting. Please edit panel.rc if you don't want gradient backgrounds in your panels, or plan to use transparent/custom panels.

style "default" {
	xthickness = 1
	ythickness = 1

	font_name = "Asap regular 11"
	#######################
	# Style Properties
	#######################
	GtkButton::child-displacement-x = 1
	GtkButton::child-displacement-y = 1
	GtkButton::default-border = { 0, 0, 0, 0 }
	GtkButton::image-spacing = 3
	GtkToolButton::icon-spacing = 3

	GtkCheckButton::indicator-size = 14

	GtkEntry::invisible-char = 0x2022

	GtkPaned::handle-size = 8

	GtkRange::trough-border = 0
	GtkRange::slider-width = 3
	GtkRange::stepper-size = 3

	GtkScale::slider-length = 3
	GtkScale::trough-side-details = 2

	GtkScrollbar::min-slider-length = 30
	GtkMenuBar::internal-padding = 2
	GtkExpander::expander-size = 16
	GtkToolbar::internal-padding = 0
	GtkTreeView::expander-size = 14
	GtkTreeView::vertical-separator = 0

	GtkMenu::horizontal-padding = 0
	GtkMenu::vertical-padding = 0

	WnckTasklist::fade-overlay-rect = 0
	# The following line hints to gecko (and possibly other appliations)
	# that the entry should be drawn transparently on the canvas.
	# Without this, gecko will fill in the background of the entry.
	GtkEntry::honors-transparent-bg-hint = 1

	GtkEntry::progress-border = { 1, 1, 1, 1 }

	####################
	# Color Definitions
	####################
	bg[NORMAL]        = @bg_color
	bg[PRELIGHT]      = shade (1.02, @bg_color)
	bg[SELECTED]      = @selected_bg_color
	bg[INSENSITIVE]   = shade (0.8, @bg_color)
	bg[ACTIVE]        = shade (0.9, @bg_color)

	fg[NORMAL]        = @fg_color
	fg[PRELIGHT]      = @fg_color
	fg[SELECTED]      = @selected_fg_color
	fg[INSENSITIVE]   = darker (@bg_color)
	fg[ACTIVE]        = @fg_color

	text[NORMAL]      = @text_color
	text[PRELIGHT]    = @text_color
	text[SELECTED]    = @selected_fg_color
	text[INSENSITIVE] = darker (@bg_color)
	text[ACTIVE]      = @selected_fg_color

	base[NORMAL]      = @base_color
	base[PRELIGHT]    = shade (0.95, @bg_color)
	base[SELECTED]    = @selected_bg_color
	base[INSENSITIVE] = @bg_color
	base[ACTIVE]      = shade (0.9, @selected_bg_color)

engine "murrine" 
	{
		animation           = TRUE
		colorize_scrollbar  = TRUE
		contrast            = 0.8
		glazestyle          = 4 # 0 = flat highlight, 1 = curved highlight, 2 = concave style, 3 = top curved highlight, 4 = beryl highlight
		gradient_shades     = {1.0,0.99,0.96, 0.94} 
		progressbarstyle    = 1
		focus_color         = "#69aef5"
		glowstyle	    	= 1
		glow_shade          = 1.4
		highlight_shade     = 1.07
		lightborder_shade   = 1.3
		lightborderstyle    = 1 # 0 = lightborder on top side, 1 = lightborder on all sides
		listviewheaderstyle = 2 # 0 = flat, 1 = glassy, 2 = raised
		listviewstyle       = 1 # 0 = nothing, 1 = dotted
		menubaritemstyle    = 0 # 0 = menuitem look, 1 = button look
		menubarstyle        = 2 # 0 = flat, 1 = glassy, 2 = gradient, 3 = striped
		menuitemstyle       = 0 # 0 = flat, 1 = glassy, 2 = striped
		menustyle           = 0 # 0 = no vertical menu stripe, 1 = display vertical menu stripe
		reliefstyle	    	= 1 # 0 = flat, 1 = inset, 2 = shadow
		rgba		    	= TRUE
		roundness           = 2
		scrollbarstyle      = 2 # 0 = nothing, 1 = circles, 2 = handles, 3 = diagonal stripes, 4 = diagonal stripes and handles, blablabla..
		sliderstyle         = 0 # 0 = nothing added, 1 = handles
		separatorstyle	    = 1
		stepperstyle        = 1 # 0 = standard, 1 = integrated stepper handles, 2 = unknown
		toolbarstyle	    = 2 # 0 = flat, 1 = glassy, 2 = gradient
		spinbuttonstyle     = 0
		comboboxstyle	    = 0
		arrowstyle 	    	= 1
		

	}

}

style "wide" {
	font_name = "Asap regular 10"
	xthickness = 2
	ythickness = 2
	bg[NORMAL]        = shade (1.07, @bg_color)
	bg[SELECTED]        = shade (1.1, @bg_color)
	bg[ACTIVE]        = shade (1.2, @bg_color)
	bg[PRELIGHT]        = shade (1.07, @bg_color)
	bg[INSENSITIVE]   = @bg_color

}

style "wider" {
	xthickness = 3
	ythickness = 3
	bg[NORMAL]        = shade (1.17, @bg_color)
	bg[SELECTED]        = shade (1.1, @bg_color)
	bg[ACTIVE]        = shade (1.2, @bg_color)
	bg[PRELIGHT]        = shade (1.07, @bg_color)
	bg[INSENSITIVE]   = @bg_color
}

style "entry" {
	xthickness = 3
	ythickness = 3

	bg[SELECTED] = mix (0.4, @selected_bg_color, @base_color)
	fg[SELECTED] = "#ff0000"#@text_color

	engine "clearlooks" {
		focus_color = shade (0.65, @selected_bg_color)
	}
}

style "spinbutton" {

	engine "clearlooks" {
		hint = "spinbutton"
	}
}

style "scale" {
	xthickness = 2
	ythickness = 2

	engine "clearlooks" {
		hint = "scale"
	}
}

style "vscale" {

	engine "clearlooks" {
		hint = "vscale"
	}
}

style "hscale" {

	engine "clearlooks" {
		hint = "hscale"
	}
}

style "scrollbar" {
	xthickness = 2
	ythickness = 2

	engine "clearlooks" {
		hint = "scrollbar"
	}
}

style "hscrollbar" {

	engine "clearlooks" {
		hint = "hscrollbar"
	}
}

style "vscrollbar" {

	engine "clearlooks" {
		hint = "vscrollbar"
	}
}

style "notebook_bg" {
# Notebook es el widget que tiene pesta√±as usado en Pluma, 
	bg[NORMAL]        = shade (1.2, @bg_color)
	bg[SELECTED]	= shade(1.2, @bg_color)
	bg[ACTIVE]	= shade(1.0, @bg_color)
	bg[INSENSITIVE]	 = shade (1.0, @bg_color)

}

style "button" {
	xthickness = 2
	ythickness = 2

	bg[NORMAL]        = shade (1.04, @bg_color)
	bg[PRELIGHT]      = shade (1.06, @bg_color)
	bg[ACTIVE]        = shade (0.85, @bg_color)
}

# The color is changed by the notebook_bg style, this style
# changes the x/ythickness
style "notebook" {
	xthickness = 2
	ythickness = 2
	bg[NORMAL] = shade (1.2, @bg_color)
}

style "statusbar" {

	engine "clearlooks" {
		hint = "statusbar"
	}
}

style "comboboxentry" {

	engine "clearlooks" {
		# Note:
		# If you set the appears-as-list option on comboboxes in the theme,
		# then you should set this hint on the combobox instead.
		hint = "comboboxentry"
	}
}

style "toolbar" {
	bg[NORMAL] = @fg_color

	bg[NORMAL] = @bg_color
	fg[NORMAL] = @fg_color
	fg[PRELIGHT] = "#000000"
	fg[ACTIVE] = @fg_color

	GtkToolbar::internal-padding = 3

	engine "pixmap" 
	{

	image{ 
	function = BOX
	recolorable = TRUE
	stretch = TRUE
	file = "imagenes/toolbarbg4.png"
	border = { 0, 0, 0, 0 }
	state = NORMAL
	}
	
	image{ 
	function = BOX
	recolorable = TRUE
	stretch = TRUE
	file = "imagenes/toolbarbg3.png"
	border = { 0, 0, 0, 0 }
	state = ACTIVE
	}

	image{ 
	function = BOX
	recolorable = TRUE
	stretch = TRUE
	file = "imagenes/toolbarbg4.png"
	border = { 0, 0, 0, 0 }
	state = SELECTED
	}

	image{ 
	function = BOX
	recolorable = TRUE
	stretch = TRUE
	file = "imagenes/toolbarbg4.png"
	border = { 0, 0, 0, 0 }
	state = INSENSITIVE
	}

	}
  
#	engine "murrine" {
#		gradient_shades     = {1.0,0.98,0.98,0.93} 
#		#gradient_shades     = {1.0,0.98,0.92,0.88}
#		highlight_shade     = 1.0
#		glow_shade	    = 1.0
#		contrast            = 1.0
#		lightborder_shade   = 0.0
#		glazestyle          = 4
#		reliefstyle 	    = 3
#	} 
} 

# Estilo para la barra del menu
#

style "menubar" {
	font_name = "Asap regular 10"

	bg[NORMAL]        = shade (0.9, @bg_color)
	bg[PRELIGHT]        = shade (0.9, @bg_color)
	bg[ACTIVE]        = shade (1.1, @bg_color)
	bg[SELECTED]        = shade (0.8, @tooltip_bg_color)
	bg[INSENSITIVE]	= shade (0.6, @bg_color)

	fg[NORMAL] = shade (0.3, @selected_fg_color)
	fg[INSENSITIVE] = shade (0.6, @selected_fg_color)

        GtkWidget::window-dragging = 1

	engine "pixmap"
  {
      image{
	  function = BOX
	  state = NORMAL
      file = "imagenes/menubarbg4.png"
      border = {0, 0, 0, 0}
      detail = "menubar"}

      image{
	  function = BOX
	  state = INSENSITIVE
      file = "imagenes/toolbarbg4.png"
      border = {0, 0, 0, 0}
      detail = "menubar"}

   }

#	engine "murrine" {
#		menustyle = 0
#		reliefstyle = 1
#		gradient_shades		= {0.97,0.92,0.99,1.0} 
		#glazestyle 		= 1
		#highlight_shade		= 1.0 
		#contrast		= 0.4
		#lightborder_shade	= 0.9
		#lightborderstyle 	= 1
		#glow_shade              = 1.0
#	}

}

# Estilo para el menu

style "menu" {
	
	font_name = "Asap regular 10"
	xthickness = 8
	ythickness = 8

	bg[NORMAL]        = shade (1.4, @bg_color)
	bg[PRELIGHT]      = shade(1.3, @tooltip_bg_color)
	bg[SELECTED]      = shade(1.0, @tooltip_bg_color)
    bg[ACTIVE]      = @tooltip_bg_color

	fg[NORMAL]		= shade(0.5, @selected_fg_color)
	fg[SELECTED]      = shade( 1.5, @selected_fg_color)
    fg[ACTIVE]      = shade (1.5, @selected_fg_color)
	fg[PRELIGHT] 	= shade (1.5, @selected_fg_color)

	engine "murrine" {
			roundness = 2
			menustyle = 0
			reliefstyle = 1
	}

}

# Estilo para el item seleccionado del menu

style "menu_item" {
	xthickness = 2
	ythickness = 1
	bg[PRELIGHT]        = shade (1.0, @tooltip_bg_color) # color de menues al pasar el mouse encima.
	
	fg[PRELIGHT]      = shade(1.25, @bg_color)
	fg[SELECTED]      = shade(1.5, @selected_fg_color)
    fg[ACTIVE]        = shade (0.2, @selected_fg_color)
	fg[INSENSITIVE]   = shade (0.5, @selected_fg_color)

	engine "murrine" {
			roundness = 4
			menustyle = 0
			menuitemstyle = 0
			reliefstyle = 1
	}

}

style "caja-location"
{

GtkMenuBar::shadow_type        		        = GTK_SHADOW_OUT

	xthickness = 2
	ythickness = 2
	bg[NORMAL] = "#F1F1F1"

	engine "murrine" {
		roundness = 4
		reliefstyle = 1
		gradient_shades		= {1.0,0.96,0.92,0.90} 
		#glazestyle 		= 1
		highlight_shade		= 1.0 
		#contrast		= 0.4
		lightborder_shade	= 1.2
		#lightborderstyle 	= 1
		#glow_shade              = 1.0
	}

}


# This style is there to modify the separator menu items. The goals are:
# 1. Get a specific height.
# 2. The line should go to the edges (ie. no border at the left/right)
style "separator_menu_item" {
	xthickness = 1
	ythickness = 0

	GtkSeparatorMenuItem::horizontal-padding = 0
	GtkWidget::wide-separators = 1
	GtkWidget::separator-width = 1
	GtkWidget::separator-height = 7
}

style "frame_title" {

	fg[NORMAL]        = lighter (@fg_color)
}

style "treeview" {

	engine "clearlooks" {
		hint = "treeview"
	}
}

# The almost useless progress bar style
style "progressbar" {
	xthickness = 1
	ythickness = 1

	fg[PRELIGHT]      = @selected_fg_color

	engine "clearlooks" {
		# Explicitly set the radius for the progress bars inside menu items.
		radius = 3.0

		hint = "progressbar"
	}
}

# This style is based on the default style, so that the colors from the button
# style are overriden again.
style "treeview_header" = "default" {
	xthickness = 2
	ythickness = 1

	engine "clearlooks" {
		hint = "treeview-header"
	}
}

style "tooltips" {
	xthickness = 8
	ythickness = 4

	GtkWidget::new-tooltip-style = 1

	bg[NORMAL]        = @tooltip_bg_color
	fg[NORMAL]        = @tooltip_fg_color
}

style "nautilus_location" {

	bg[NORMAL]        = mix (0.50, shade (1.05, @bg_color), @selected_bg_color)
}

# Wrokaroudn style for places where the text color is used instead of the fg color.
style "text_is_fg_color_workaround" {

	text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @fg_color
	text[SELECTED]    = @selected_fg_color
	text[ACTIVE]      = @fg_color
	text[INSENSITIVE] = darker (@bg_color)
}

# Workaround style for menus where the text color is used instead of the fg color.
style "menuitem_text_is_fg_color_workaround" {

	text[NORMAL]      = shade(0.6,@selected_fg_color)
	text[PRELIGHT]    = @selected_fg_color
	text[SELECTED]    = @selected_fg_color
	text[ACTIVE]      = @fg_color
	text[INSENSITIVE] = darker (@bg_color)
}

# Workaround style for places where the fg color is used instead of the text color.
style "fg_is_text_color_workaround" {

	fg[NORMAL]        = @text_color
	fg[PRELIGHT]      = @text_color
	fg[SELECTED]      = @selected_fg_color
	fg[ACTIVE]        = @selected_fg_color
	fg[INSENSITIVE]   = darker (@bg_color)
}

# Style to set the toolbar to use a flat style. This is because the "New" button in
# Evolution is not drawn transparent. So if there is a gradient in the background it will
# look really wrong.
# See http://bugzilla.gnome.org/show_bug.cgi?id=446953.
style "evo_new_button_workaround" {

	engine "clearlooks" {
		toolbarstyle = 0
	}
}


###############################################################################
# The following part of the gtkrc applies the different styles to the widgets.
###############################################################################

# The default style is applied to every widget
class "GtkWidget" style "wide"

class "GtkSeparator" style "wide"
class "GtkFrame" style "wide"
class "GtkCalendar" style "wide"
class "GtkEntry" style "entry"

class "GtkSpinButton" style "spinbutton"
class "GtkScale" style "scale"
class "GtkVScale" style "vscale"
class "GtkHScale" style "hscale"
class "GtkScrollbar" style "scrollbar"
class "GtkHScrollbar" style "hscrollbar"
class "GtkVScrollbar" style "vscrollbar"
class "GtkToolbar"   style "toolbar" 

# General matching follows. The order is choosen so that the right styles override
# each other. EG. progressbar needs to be more important than the menu match.
#widget_class "*<GtkNotebook>" style "notebook_bg"
widget_class "*<GtkNotebook>" style "caja-location"
# This is not perfect, it could be done better.
# (That is modify *every* widget in the notebook, and change those back that
# we really don't want changed)
widget_class "*<GtkNotebook>*<GtkEventBox>" style "notebook_bg"
widget_class "*<GtkNotebook>*<GtkDrawingArea>" style "notebook_bg"
widget_class "*<GtkNotebook>*<GtkLayout>" style "notebook_bg"
widget_class "*<GtkNotebook>*<GtkViewport>" style "notebook_bg"
widget_class "*<GtkNotebook>*<GtkScrolledWindow>" style "notebook_bg"

widget_class "*<GtkButton>" style "caja-location"
widget_class "*<GtkNotebook>" style "notebook_bg"
widget_class "*<GtkStatusbar>*" style "statusbar"

widget_class "*<GtkComboBoxEntry>*" style "comboboxentry"
widget_class "*<GtkCombo>*" style "caja-location"

widget_class "*<GtkMenuBar>*" style "menubar"
widget_class "*<GtkMenu>*" style "menu"
widget_class "*<GtkMenuItem>*" style "menu_item"
widget_class "*<GtkSeparatorMenuItem>*" style "separator_menu_item"

widget_class "*.<GtkFrame>.<GtkLabel>" style "frame_title"
widget_class "*.<GtkTreeView>*" style "treeview"

widget_class "*<GtkProgress>" style "progressbar"

# Treeview headers (and similar stock GTK+ widgets)
widget_class "*.<GtkTreeView>.<GtkButton>" style "treeview_header"
widget_class "*.<GtkCTree>.<GtkButton>" style "treeview_header"
widget_class "*.<GtkList>.<GtkButton>" style "treeview_header"
widget_class "*.<GtkCList>.<GtkButton>" style "treeview_header"

# The window of the tooltip is called "gtk-tooltip"
##################################################################
# FIXME:
# This will not work if one embeds eg. a button into the tooltip.
# As far as I can tell right now we will need to rework the theme
# quite a bit to get this working correctly.
# (It will involve setting different priorities, etc.)
##################################################################
widget "gtk-tooltip*" style "tooltips"

##########################################################################
# Following are special cases and workarounds for issues in applications.
##########################################################################

# Workaround for the evolution ETable (bug #527532)
widget_class "*.ETable.ECanvas" style "treeview_header"
# Workaround for the evolution ETree
widget_class "*.ETree.ECanvas" style "treeview_header"

# Special case the nautilus-extra-view-widget
# ToDo: A more generic approach for all applications that have a widget like this.
widget "*.nautilus-extra-view-widget" style : highest "caja_location"

widget "*.caja-extra-view-widget" style : highest "caja_location"

# Work around for http://bugzilla.gnome.org/show_bug.cgi?id=382646
# Note that this work around assumes that the combobox is _not_ in appears-as-list mode.
widget_class "*.<GtkComboBox>.<GtkCellView>" style "text_is_fg_color_workaround"
# This is the part of the workaround that fixes the menus
widget "*.gtk-combobox-popup-menu.*" style "menuitem_text_is_fg_color_workaround"

# Work around the usage of GtkLabel inside GtkListItems to display text.
# This breaks because the label is shown on a background that is based on the base color.
widget_class "*<GtkListItem>*" style "fg_is_text_color_workaround"
# GtkCList also uses the fg color to draw text on top of the base colors.
widget_class "*<GtkCList>" style "fg_is_text_color_workaround"
# Nautilus when renaming files, and maybe other places.
widget_class "*<EelEditableLabel>" style "fg_is_text_color_workaround"

# See the documentation of the style.
widget_class "EShellWindow.GtkVBox.BonoboDock.BonoboDockBand.BonoboDockItem*" style "evo_new_button_workaround"
